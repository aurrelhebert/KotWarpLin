package io.warp10.warpscriptDSL
 
// 
// WarpScript KOTLINDSL
// @author aurrelhebert 
// @license apache 2.0 
// 
 
// Autogenerated code
 
fun WarpScript.delete(init: Element.() -> Unit = {}) : Functions {
    return initTag(Functions("DELETE"), init) 
} 

fun WarpScript.delete(token: String, selector: String, startTimestamp: Long, endTimestamp: Long, gtsCount: Long, init: Element.() -> Unit = {}) : Functions {
    val data = hashMapOf<Number, Any?>(1 to token, 2 to selector, 3 to startTimestamp, 4 to endTimestamp, 5 to gtsCount)
    return initTag(Functions("DELETE", data, HashMap(), this, emptyLambda), init) 
} 

fun WarpScript.delete(token: String? = null, tokenElements: Element.() -> Unit = emptyLambda, 
            selector: String? = null, selectorElements: Element.() -> Unit = emptyLambda, 
            startTimestamp: Long? = null, startTimestampElements: Element.() -> Unit = emptyLambda, 
            endTimestamp: Long? = null, endTimestampElements: Element.() -> Unit = emptyLambda, 
            gtsCount: Long? = null, gtsCountElements: Element.() -> Unit = emptyLambda, 
            init: Element.() -> Unit = {}) : Functions {
    val data = hashMapOf<Number, Any?>(1 to token, 2 to selector, 3 to startTimestamp, 4 to endTimestamp, 5 to gtsCount)
    val elements = hashMapOf<Number, Element.() -> Unit>(1 to tokenElements, 2 to selectorElements, 3 to startTimestampElements, 4 to endTimestampElements, 5 to gtsCountElements)
    return initTag(Functions("DELETE", data, elements, this, emptyLambda), init) 
} 

fun WarpScript.update(init: Element.() -> Unit = {}) : Functions {
    return initTag(Functions("UPDATE"), init) 
} 

fun WarpScript.update(token: String, init: Element.() -> Unit = {}) : Functions {
    val data = hashMapOf<Number, Any?>(1 to token)
    return initTag(Functions("UPDATE", data, HashMap(), this, emptyLambda), init) 
} 

fun WarpScript.update(token: String? = null, tokenElements: Element.() -> Unit = emptyLambda, 
            init: Element.() -> Unit = {}) : Functions {
    val data = hashMapOf<Number, Any?>(1 to token)
    val elements = hashMapOf<Number, Element.() -> Unit>(1 to tokenElements)
    return initTag(Functions("UPDATE", data, elements, this, emptyLambda), init) 
} 
