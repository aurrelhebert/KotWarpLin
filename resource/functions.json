{
  "data":
  [
    {
      "function": "eulerConstant",
      "warpScriptName": "e"
    },
    {
      "function": "maxLong",
      "warpScriptName": "MAXLONG"
    },
    {
      "function": "minLong",
      "warpScriptName": "MINLONG"
    },
    {
      "function": "notANumber",
      "warpScriptName": "NaN"
    },
    {
      "function": "nullWarp10",
      "warpScriptName": "NULL"
    },
    {
      "function": "pi",
      "warpScriptName": "PI"
    },
    {
      "function": "and",
      "warpScriptName": "&&",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Boolean"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Boolean"
        }
      ]
    },
    {
      "function": "or",
      "warpScriptName": "||",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Boolean"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Boolean"
        }
      ]
    },
    {
      "function": "andBitWise",
      "warpScriptName": "&",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Long"
        }
      ]
    },
    {
      "function": "orBitWise",
      "warpScriptName": "|",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Long"
        }
      ]
    },
    {
      "function": "xorBitWise",
      "warpScriptName": "^",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Long"
        }
      ]
    },
    {
      "function": "add",
      "warpScriptName": "+",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Any"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Any"
        }
      ]
    },
    {
      "function": "addToStackElement",
      "warpScriptName": "+",
      "attributes": [
        {
          "index": 2,
          "name": "value",
          "type": "Any"
        }
      ]
    },
    {
      "function": "addToCloneList",
      "warpScriptName": "+",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "List<Any>"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Any"
        }
      ]
    },
    {
      "function": "addToExistingListFromStack",
      "warpScriptName": "+!",
      "attributes": [
        {
          "index": 2,
          "name": "element",
          "type": "Any"
        }
      ]
    },
    {
      "function": "addToExistingList",
      "warpScriptName": "+!",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "List<Any>"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Any"
        }
      ]
    },
    {
      "function": "sub",
      "warpScriptName": "-",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Number"
        }
      ]
    },
    {
      "function": "doubleToBits",
      "warpScriptName": "->DOUBLEBITS",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Double"
        }
      ]
    },
    {
      "function": "doubleToFloatToBits",
      "warpScriptName": "->FLOATBITS",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Double"
        }
      ]
    },
    {
      "function": "mul",
      "warpScriptName": "*",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Number"
        }
      ]
    },
    {
      "function": "div",
      "warpScriptName": "/",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Number"
        }
      ]
    },
    {
      "function": "mod",
      "warpScriptName": "%",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Number"
        }
      ]
    },
    {
      "function": "unaryComplementBitWise",
      "warpScriptName": "~",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Long"
        }
      ]
    },
    {
      "function": "exp",
      "warpScriptName": "**",
      "attributes": [
        {
          "index": 1,
          "name": "base",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "power",
          "type": "Number"
        }
      ]
    },
    {
      "function": "leftShiftBitsOfALong",
      "warpScriptName": "<<",
      "attributes": [
        {
          "index": 1,
          "name": "number",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "shiftedBits",
          "type": "Long"
        }
      ]
    },
    {
      "function": "rightShiftBitsOfALong",
      "warpScriptName": ">>",
      "attributes": [
        {
          "index": 1,
          "name": "number",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "shiftedBits",
          "type": "Long"
        }
      ]
    },
    {
      "function": "rightShiftBitsOfALongWithoutSign",
      "warpScriptName": ">>>",
      "attributes": [
        {
          "index": 1,
          "name": "number",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "shiftedBits",
          "type": "Long"
        }
      ]
    },
    {
      "function": "equal",
      "warpScriptName": "==",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Any"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Any"
        }
      ]
    },
    {
      "function": "equalWithToleranceFactor",
      "warpScriptName": "~=",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Number"
        },
        {
          "index": 3,
          "name": "lambda",
          "type": "Number"
        }
      ]
    },
    {
      "function": "notEqual",
      "warpScriptName": "!=",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Any"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Any"
        }
      ]
    },
    {
      "function": "lowerThan",
      "warpScriptName": "<",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Any"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Any"
        }
      ]
    },
    {
      "function": "greaterThan",
      "warpScriptName": ">",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Any"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Any"
        }
      ]
    },
    {
      "function": "lowerOrEqual",
      "warpScriptName": "<=",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Any"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Any"
        }
      ]
    },
    {
      "function": "greaterOrEqual",
      "warpScriptName": ">=",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Any"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Any"
        }
      ]
    },
    {
      "function": "notLogical",
      "warpScriptName": "!",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Boolean"
        }
      ]
    },
    {
      "function": "abs",
      "warpScriptName": "ABS",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "cubicRoot",
      "warpScriptName": "CBRT",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "ceil",
      "warpScriptName": "CEIL",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "copySign",
      "warpScriptName": "COPYSIGN",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Number"
        }
      ]
    },
    {
      "function": "longBitsToDouble",
      "warpScriptName": "DOUBLEBITS->",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Long"
        }
      ]
    },
    {
      "function": "eulerNumber",
      "warpScriptName": "EXP",
      "attributes": [
        {
          "index": 1,
          "name": "power",
          "type": "Long"
        }
      ]
    },
    {
      "function": "longBitsToFloatToDouble",
      "warpScriptName": "FLOATBITS->",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Long"
        }
      ]
    },
    {
      "function": "floor",
      "warpScriptName": "FLOOR",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "ieeeRemainder",
      "warpScriptName": "IEEEREMAINDER",
      "attributes": [
        {
          "index": 1,
          "name": "f1",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "f2",
          "type": "Number"
        }
      ]
    },
    {
      "function": "isNotANumber",
      "warpScriptName": "ISNaN",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "isNullWarp10",
      "warpScriptName": "ISNULL",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Any"
        }
      ]
    },
    {
      "function": "lBounds",
      "warpScriptName": "LBOUNDS",
      "attributes": [
        {
          "index": 1,
          "name": "a",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "b",
          "type": "Number"
        },
        {
          "index": 3,
          "name": "M",
          "type": "Long"
        }
      ]
    },
    {
      "function": "log",
      "warpScriptName": "LOG",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "log10",
      "warpScriptName": "LOG10",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "max",
      "warpScriptName": "MAX",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Number"
        }
      ]
    },
    {
      "function": "min",
      "warpScriptName": "MIN",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Number"
        }
      ]
    },
    {
      "function": "nBounds",
      "warpScriptName": "NBOUNDS",
      "attributes": [
        {
          "index": 1,
          "name": "mu",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "sigma",
          "type": "Number"
        },
        {
          "index": 3,
          "name": "n",
          "type": "Long"
        }
      ]
    },
    {
      "function": "nextAfter",
      "warpScriptName": "NEXTAFTER",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "Number"
        }
      ]
    },
    {
      "function": "nextUp",
      "warpScriptName": "NEXTUP",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "npdf",
      "warpScriptName": "NPDF",
      "attributes": [
        {
          "index": 1,
          "name": "mu",
          "type": "Number"
        },
        {
          "index": 2,
          "name": "sigma",
          "type": "Number"
        }
      ]
    },
    {
      "function": "probability",
      "warpScriptName": "PROBABILITY",
      "attributes": [
        {
          "index": 1,
          "name": "valueHistogram",
          "type": "HashMap<Any,Number>"
        }
      ]
    },
    {
      "function": "rand",
      "warpScriptName": "RAND"
    },
    {
      "function": "randPDF",
      "warpScriptName": "RANDPDF",
      "attributes": [
        {
          "index": 1,
          "name": "valueHistogram",
          "type": "HashMap<Any,Number>"
        }
      ]
    },
    {
      "function": "revBits",
      "warpScriptName": "REVBITS",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Long"
        }
      ]
    },
    {
      "function": "rInt",
      "warpScriptName": "RINT",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "round",
      "warpScriptName": "ROUND",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "sigNum",
      "warpScriptName": "SIGNUM",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "sqrt",
      "warpScriptName": "SQRT",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "w",
      "warpScriptName": "w",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "d",
      "warpScriptName": "d",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "h",
      "warpScriptName": "h",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "m",
      "warpScriptName": "m",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "s",
      "warpScriptName": "s",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "ms",
      "warpScriptName": "ms",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "us",
      "warpScriptName": "us",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "ns",
      "warpScriptName": "ns",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "ps",
      "warpScriptName": "ps",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "toPickle",
      "warpScriptName": "->PICKLE",
      "attributes": [
        {
          "index": 1,
          "name": "pickle",
          "type": "HashMap<Any,Any>"
        }
      ]
    },
    {
      "function": "jsonTo",
      "warpScriptName": "JSON->",
      "attributes": [
        {
          "index": 1,
          "name": "jsonString",
          "type": "String"
        }
      ]
    },
    {
      "function": "toJson",
      "warpScriptName": "->JSON",
      "attributes": [
        {
          "index": 1,
          "name": "item",
          "type": "Any"
        }
      ]
    },
    {
      "function": "pickleTo",
      "warpScriptName": "PICKLE->"
    },
    {
      "function": "toBin",
      "warpScriptName": "TOBIN",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Long"
        }
      ]
    },
    {
      "function": "toBoolean",
      "warpScriptName": "TOBOOLEAN",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Any"
        }
      ]
    },
    {
      "function": "toLong",
      "warpScriptName": "TOLONG",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Any"
        }
      ]
    },
    {
      "function": "toDouble",
      "warpScriptName": "TODOUBLE",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Any"
        }
      ]
    },
    {
      "function": "toString",
      "warpScriptName": "TOSTRING",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Any"
        }
      ]
    },
    {
      "function": "toTimestamp",
      "warpScriptName": "TOTIMESTAMP",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "cos",
      "warpScriptName": "COS",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "cosh",
      "warpScriptName": "COSH",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "acos",
      "warpScriptName": "ACOS",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "sin",
      "warpScriptName": "SIN",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "sinh",
      "warpScriptName": "SINH",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "asin",
      "warpScriptName": "ASIN",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "tan",
      "warpScriptName": "TAN",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "tanh",
      "warpScriptName": "TANH",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "atan",
      "warpScriptName": "ATAN",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Number"
        }
      ]
    },
    {
      "function": "toDegrees",
      "warpScriptName": "TODEGREES",
      "attributes": [
        {
          "index": 1,
          "name": "radians",
          "type": "Number"
        }
      ]
    },
    {
      "function": "toRadians",
      "warpScriptName": "TORADIANS",
      "attributes": [
        {
          "index": 1,
          "name": "degrees",
          "type": "Number"
        }
      ]
    },
    {
      "function": "toQuaternion",
      "warpScriptName": "->Q",
      "attributes": [
        {
          "index": 1,
          "name": "w",
          "type": "Double"
        },
        {
          "index": 2,
          "name": "x",
          "type": "Double"
        },
        {
          "index": 3,
          "name": "y",
          "type": "Double"
        },
        {
          "index": 4,
          "name": "z",
          "type": "Double"
        }
      ]
    },
    {
      "function": "quaternionTo",
      "warpScriptName": "Q->",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Long"
        }
      ]
    },
    {
      "function": "quaternionConjugate",
      "warpScriptName": "QCONJUGATE"
    },
    {
      "function": "quaternionDivide",
      "warpScriptName": "QDIVIDE"
    },
    {
      "function": "quaternionMultiply",
      "warpScriptName": "QMULTIPLY"
    },
    {
      "function": "quaternionRotate",
      "warpScriptName": "QROTATE"
    },
    {
      "function": "quaternionRotation",
      "warpScriptName": "QROTATION"
    },
    {
      "function": "rotationToQuaternion",
      "warpScriptName": "ROTATIONQ",
      "attributes": [
        {
          "index": 1,
          "name": "w",
          "type": "Double"
        },
        {
          "index": 2,
          "name": "x",
          "type": "Double"
        },
        {
          "index": 3,
          "name": "y",
          "type": "Double"
        },
        {
          "index": 4,
          "name": "z",
          "type": "Double"
        }
      ]
    },
    {
      "function": "counter",
      "warpScriptName": "COUNTER"
    },
    {
      "function": "counterDelta",
      "warpScriptName": "COUNTERDELTA",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Long"
        }
      ]
    },
    {
      "function": "counterValue",
      "warpScriptName": "COUNTERVALUE"
    },
    {
      "function": "range",
      "warpScriptName": "RANGE",
      "attributes": [
        {
          "index": 1,
          "name": "rangeList",
          "type": "List<Number>"
        }
      ]
    },
    {
      "function": "bitCount",
      "warpScriptName": "BITCOUNT"
    },
    {
      "function": "bitGet",
      "warpScriptName": "BITGET",
      "attributes": [
        {
          "index": 1,
          "name": "index",
          "type": "Long"
        }
      ]
    },
    {
      "function": "bitsToBytes",
      "warpScriptName": "BITSTOBYTES"
    },
    {
      "function": "bytesToBits",
      "warpScriptName": "BYTESTOBITS"
    },
    {
      "function": "toTsElements",
      "warpScriptName": "->TSELEMENTS",
      "attributes": [
        {
          "index": 1,
          "name": "timestamp",
          "type": "Long"
        }
      ]
    },
    {
      "function": "toTsElementsWithTimeZone",
      "warpScriptName": "->TSELEMENTS",
      "attributes": [
        {
          "index": 1,
          "name": "timestamp",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "timeZone",
          "type": "String"
        }
      ]
    },
    {
      "function": "addDays",
      "warpScriptName": "ADDDAYS",
      "attributes": [
        {
          "index": 1,
          "name": "timestamp",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "NumberOfDaysToAdd",
          "type": "Long"
        }
      ]
    },
    {
      "function": "addDaysWithTimeZone",
      "warpScriptName": "ADDDAYS",
      "attributes": [
        {
          "index": 1,
          "name": "timestamp",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "timeZone",
          "type": "String"
        },
        {
          "index": 3,
          "name": "NumberOfDaysToAdd",
          "type": "Long"
        }
      ]
    },
    {
      "function": "addMonths",
      "warpScriptName": "ADDMONTHS",
      "attributes": [
        {
          "index": 1,
          "name": "timestamp",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "NumberOfMonthsToAdd",
          "type": "Long"
        }
      ]
    },
    {
      "function": "addMonthsWithTimeZone",
      "warpScriptName": "ADDMONTHS",
      "attributes": [
        {
          "index": 1,
          "name": "timestamp",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "timeZone",
          "type": "String"
        },
        {
          "index": 3,
          "name": "NumberOfMonthsToAdd",
          "type": "Long"
        }
      ]
    },
    {
      "function": "addYears",
      "warpScriptName": "ADDYEARS",
      "attributes": [
        {
          "index": 1,
          "name": "timestamp",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "NumberOfYearsToAdd",
          "type": "Long"
        }
      ]
    },
    {
      "function": "addYearsWithTimeZone",
      "warpScriptName": "ADDYEARS",
      "attributes": [
        {
          "index": 1,
          "name": "timestamp",
          "type": "Long"
        },
        {
          "index": 2,
          "name": "timeZone",
          "type": "String"
        },
        {
          "index": 3,
          "name": "NumberOfYearsToAdd",
          "type": "Long"
        }
      ]
    },
    {
      "function": "ago",
      "warpScriptName": "AGO",
      "attributes": [
        {
          "index": 1,
          "name": "duration",
          "type": "Long"
        }
      ]
    },
    {
      "function": "duration",
      "warpScriptName": "DURATION",
      "attributes": [
        {
          "index": 1,
          "name": "ISO8601Duration",
          "type": "String"
        }
      ]
    },
    {
      "function": "humanDuration",
      "warpScriptName": "HUMANDURATION",
      "attributes": [
        {
          "index": 1,
          "name": "timeUnit",
          "type": "Long"
        }
      ]
    },
    {
      "function": "humanDuration",
      "warpScriptName": "HUMANDURATION",
      "attributes": [
        {
          "index": 1,
          "name": "timeUnit",
          "type": "Long"
        }
      ]
    },
    {
      "function": "iso8601",
      "warpScriptName": "ISO8601",
      "attributes": [
        {
          "index": 1,
          "name": "timestamp",
          "type": "Long"
        }
      ]
    },
    {
      "function": "msTU",
      "warpScriptName": "MSTU"
    },
    {
      "function": "notAfter",
      "warpScriptName": "NOTAFTER",
      "attributes": [
        {
          "index": 1,
          "name": "timestamp",
          "type": "Long"
        }
      ]
    },
    {
      "function": "notBefore",
      "warpScriptName": "NOTBEFORE",
      "attributes": [
        {
          "index": 1,
          "name": "timestamp",
          "type": "Long"
        }
      ]
    },
    {
      "function": "now",
      "warpScriptName": "NOW"
    },
    {
      "function": "sTU",
      "warpScriptName": "STU"
    },
    {
      "function": "tsElementTo",
      "warpScriptName": "TSELEMENTS->",
      "attributes": [
        {
          "index": 1,
          "name": "tsElementsList",
          "type": "List<Number>"
        }
      ]
    },
    {
      "function": "tsElementToWithTimeZone",
      "warpScriptName": "TSELEMENTS->",
      "attributes": [
        {
          "index": 1,
          "name": "tsElementsList",
          "type": "List<Number>"
        },
        {
          "index": 2,
          "name": "timeZone",
          "type": "String"
        }
      ]
    },
    {
      "function": "toBin",
      "warpScriptName": "->BIN",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "toHex",
      "warpScriptName": "->HEX",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "base64ToHex",
      "warpScriptName": "B64TOHEX",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "base64To",
      "warpScriptName": "B64->",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "base64UrlTo",
      "warpScriptName": "B64URL->",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "binTo",
      "warpScriptName": "BIN->",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "binToHex",
      "warpScriptName": "BINTOHEX",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "bytesTo",
      "warpScriptName": "BYTES->",
      "attributes": [
        {
          "index": 1,
          "name": "charset",
          "type": "String"
        }
      ]
    },
    {
      "function": "fromBin",
      "warpScriptName": "FROMBIN",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "fromBits",
      "warpScriptName": "FROMBITS",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Long"
        }
      ]
    },
    {
      "function": "fromHex",
      "warpScriptName": "FROMHEX",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "hash",
      "warpScriptName": "HASH",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "hexTo",
      "warpScriptName": "HEX->",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "hexToBase64",
      "warpScriptName": "HEXTOB64",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "hexToBin",
      "warpScriptName": "HEXTOBIN",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "join",
      "warpScriptName": "JOIN",
      "attributes": [
        {
          "index": 1,
          "name": "separator",
          "type": "String"
        },
        {
          "index": 2,
          "name": "elementsToLoad",
          "type": "Long"
        }
      ]
    },
    {
      "function": "match",
      "warpScriptName": "MATCH",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        },
        {
          "index": 2,
          "name": "regExp",
          "type": "String"
        }
      ]
    },
    {
      "function": "matcher",
      "warpScriptName": "MATCHER",
      "attributes": [
        {
          "index": 1,
          "name": "regExp",
          "type": "String"
        }
      ]
    },
    {
      "function": "opBase64to",
      "warpScriptName": "OPB64->",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "opBase64toHex",
      "warpScriptName": "OPB64TOHEX",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "replace",
      "warpScriptName": "REPLACE",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "String"
        },
        {
          "index": 2,
          "name": "regExp",
          "type": "String"
        },
        {
          "index": 3,
          "name": "replacement",
          "type": "String"
        }
      ]
    },
    {
      "function": "replaceAll",
      "warpScriptName": "REPLACEALL",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "String"
        },
        {
          "index": 2,
          "name": "regExp",
          "type": "String"
        },
        {
          "index": 3,
          "name": "replacement",
          "type": "String"
        }
      ]
    },
    {
      "function": "split",
      "warpScriptName": "SPLIT",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "String"
        },
        {
          "index": 2,
          "name": "delimiter",
          "type": "String"
        }
      ]
    },
    {
      "function": "substring",
      "warpScriptName": "SUBSTRING",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        },
        {
          "index": 2,
          "name": "startIndex",
          "type": "Long"
        },
        {
          "index": 3,
          "name": "length",
          "type": "Long"
        }
      ]
    },
    {
      "function": "substringStartAt",
      "warpScriptName": "SUBSTRING",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        },
        {
          "index": 2,
          "name": "startIndex",
          "type": "Long"
        }
      ]
    },
    {
      "function": "template",
      "warpScriptName": "TEMPLATE",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "String"
        },
        {
          "index": 2,
          "name": "template",
          "type": "HashMap<String, Any>"
        }
      ]
    },
    {
      "function": "toBase64Url",
      "warpScriptName": "->B64URL",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "toBase64",
      "warpScriptName": "->B64",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "toBin",
      "warpScriptName": "->BIN",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "toBytes",
      "warpScriptName": "->BYTES",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        },
        {
          "index": 2,
          "name": "charset",
          "type": "String"
        }
      ]
    },
    {
      "function": "toOpBase64",
      "warpScriptName": "->OPB64",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "toHex",
      "warpScriptName": "TOHEX",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "Long"
        }
      ]
    },
    {
      "function": "toLower",
      "warpScriptName": "TOLOWER",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "tuUpper",
      "warpScriptName": "TOUPPER",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "trim",
      "warpScriptName": "TRIM",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "urlDecode",
      "warpScriptName": "URLDECODE",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "urlEncode",
      "warpScriptName": "URLENCODE",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "String"
        }
      ]
    },
    {
      "function": "uuid",
      "warpScriptName": "UUID"
    },
    {
      "function": "aesUnwrap",
      "warpScriptName": "AESUNWRAP"
    },
    {
      "function": "aesWrap",
      "warpScriptName": "AESWRAP"
    },
    {
      "function": "md5",
      "warpScriptName": "MD5"
    },
    {
      "function": "rsaDecrypt",
      "warpScriptName": "RSADECRYPT"
    },
    {
      "function": "rsaEncrypt",
      "warpScriptName": "RSAENCRYPT"
    },
    {
      "function": "rsaGen",
      "warpScriptName": "RSAGEN",
      "attributes": [
        {
          "index": 1,
          "name": "exponent",
          "type": "String"
        },
        {
          "index": 2,
          "name": "keyLength",
          "type": "Long"
        }
      ]
    },
    {
      "function": "rsaPrivate",
      "warpScriptName": "RSAPRIVATE",
      "attributes": [
        {
          "index": 1,
          "name": "parameter",
          "type": "HashMap<String,String>"
        }
      ]
    },
    {
      "function": "rsaPublic",
      "warpScriptName": "RSAPUBLIC",
      "attributes": [
        {
          "index": 1,
          "name": "parameter",
          "type": "HashMap<String,String>"
        }
      ]
    },
    {
      "function": "rsaSign",
      "warpScriptName": "RSASIGN"
    },
    {
      "function": "rsaVerify",
      "warpScriptName": "RSAVERIFY"
    },
    {
      "function": "sha1",
      "warpScriptName": "SHA1"
    },
    {
      "function": "sha1Hmac",
      "warpScriptName": "SHA1HMAC"
    },
    {
      "function": "sha256",
      "warpScriptName": "SHA256"
    },
    {
      "function": "sha256Hmac",
      "warpScriptName": "SHA256HMAC"
    },
    {
      "function": "toZOrderCurve",
      "warpScriptName": "->Z",
      "attributes": [
        {
          "index": 1,
          "name": "parameter",
          "type": "List<Long>"
        },
        {
          "index": 2,
          "name": "bitwidth",
          "type": "Long"
        }
      ]
    },
    {
      "function": "gzip",
      "warpScriptName": "GZIP",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "String"
        }
      ]
    },
    {
      "function": "unGzip",
      "warpScriptName": "UNGZIP"
    },
    {
      "function": "zOrderCurveTo",
      "warpScriptName": "Z->",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "String"
        },
        {
          "index": 2,
          "name": "input",
          "type": "String"
        }
      ]
    },
    {
      "function": "call",
      "warpScriptName": "CALL"
    },
    {
      "function": "cachedUdf",
      "warpScriptName": "CUDF",
      "attributes": [
        {
          "index": 1,
          "name": "class",
          "type": "String"
        }
      ]
    },
    {
      "function": "udf",
      "warpScriptName": "UDF",
      "attributes": [
        {
          "index": 1,
          "name": "class",
          "type": "String"
        }
      ]
    },
    {
      "function": "emptyList",
      "warpScriptName": "[]"
    },
    {
      "function": "emptyMap",
      "warpScriptName": "{}"
    },
    {
      "function": "toList",
      "warpScriptName": "->LIST",
      "attributes": [
        {
          "index": 1,
          "name": "depth",
          "type": "Long"
        }
      ]
    },
    {
      "function": "toMap",
      "warpScriptName": "->MAP",
      "attributes": [
        {
          "index": 1,
          "name": "depth",
          "type": "Long"
        }
      ]
    },
    {
      "function": "toMat",
      "warpScriptName": "->MAT",
      "attributes": [
        {
          "index": 1,
          "name": "2DList",
          "type": "List<List<Number>>"
        }
      ]
    },
    {
      "function": "toSet",
      "warpScriptName": "->SET",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "List<Any>"
        }
      ]
    },
    {
      "function": "toV",
      "warpScriptName": "->V",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "List<Number>"
        }
      ]
    },
    {
      "function": "toVector",
      "warpScriptName": "->VEC",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "List<Number>"
        }
      ]
    },
    {
      "function": "append",
      "warpScriptName": "APPEND",
      "attributes": [
        {
          "index": 1,
          "name": "p1",
          "type": "List<Any>"
        },
        {
          "index": 2,
          "name": "p2",
          "type": "List<Any>"
        }
      ]
    },
    {
      "function": "cloneReverse",
      "warpScriptName": "CLONEREVERSE",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "List<Any>"
        }
      ]
    },
    {
      "function": "containsKey",
      "warpScriptName": "CONTAINSKEY",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "HashMap<Any,Any>"
        },
        {
          "index": 2,
          "name": "key",
          "type": "Any"
        }
      ]
    },
    {
      "function": "containsValue",
      "warpScriptName": "CONTAINSVALUE",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "HashMap<Any,Any>"
        },
        {
          "index": 2,
          "name": "key",
          "type": "Any"
        }
      ]
    },
    {
      "function": "contains",
      "warpScriptName": "CONTAINS",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "List<Any>"
        },
        {
          "index": 2,
          "name": "key",
          "type": "Any"
        }
      ]
    },
    {
      "function": "difference",
      "warpScriptName": "DIFFERENCE"
    },
    {
      "function": "intersection",
      "warpScriptName": "INTERSECTION"
    },
    {
      "function": "flatten",
      "warpScriptName": "FLATTEN"
    },
    {
      "function": "get",
      "warpScriptName": "GET",
      "attributes": [
        {
          "index": 1,
          "name": "index",
          "type": "Long"
        }
      ]
    },
    {
      "function": "keyList",
      "warpScriptName": "KEYLIST",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "HashMap<Any,Any>"
        }
      ]
    },
    {
      "function": "listTo",
      "warpScriptName": "LIST->",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "List<Any>"
        }
      ]
    },
    {
      "function": "lSort",
      "warpScriptName": "LSORT",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "List<Any>"
        }
      ]
    },
    {
      "function": "mapTo",
      "warpScriptName": "MAP->",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "HashMap<Any,Any>"
        }
      ]
    },
    {
      "function": "matTo",
      "warpScriptName": "MAT->"
    },
    {
      "function": "mapId",
      "warpScriptName": "MAPID",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "HashMap<Any,Any>"
        }
      ]
    },
    {
      "function": "mSort",
      "warpScriptName": "MSORT",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "HashMap<Any,Any>"
        }
      ]
    },
    {
      "function": "pack",
      "warpScriptName": "PACK",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "List<Any>"
        },
        {
          "index": 2,
          "name": "format",
          "type": "String"
        }
      ]
    },
    {
      "function": "put",
      "warpScriptName": "PUT",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "HashMap<Any,Any>"
        },
        {
          "index": 2,
          "name": "value",
          "type": "Any"
        },
        {
          "index": 3,
          "name": "key",
          "type": "Any"
        }
      ]
    },
    {
      "function": "removeList",
      "warpScriptName": "REMOVE",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "List<Any>"
        },
        {
          "index": 2,
          "name": "index",
          "type": "Any"
        }
      ]
    },
    {
      "function": "removeMap",
      "warpScriptName": "REMOVE",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "Map<Any,Any>"
        },
        {
          "index": 2,
          "name": "key",
          "type": "Any"
        }
      ]
    },
    {
      "function": "reverse",
      "warpScriptName": "REVERSE",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "List<Any>"
        }
      ]
    },
    {
      "function": "set",
      "warpScriptName": "SET",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "List<Any>"
        },
        {
          "index": 2,
          "name": "elem",
          "type": "Any"
        },
        {
          "index": 3,
          "name": "index",
          "type": "Long"
        }
      ]
    },
    {
      "function": "setTo",
      "warpScriptName": "SET->"
    },
    {
      "function": "size",
      "warpScriptName": "SIZE",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "List<Any>"
        }
      ]
    },
    {
      "function": "subList",
      "warpScriptName": "SUBLIST",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "List<Any>"
        },
        {
          "index": 2,
          "name": "indexes",
          "type": "List<Long>"
        }
      ]
    },
    {
      "function": "subMap",
      "warpScriptName": "SUBMAP",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "Map<Any,Any>"
        },
        {
          "index": 2,
          "name": "keys",
          "type": "List<Any>"
        }
      ]
    },
    {
      "function": "union",
      "warpScriptName": "UNION"
    },
    {
      "function": "unique",
      "warpScriptName": "UNIQUE",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "List<Any>"
        }
      ]
    },
    {
      "function": "unList",
      "warpScriptName": "UNLIST",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "List<Any>"
        }
      ]
    },
    {
      "function": "unMap",
      "warpScriptName": "UNMAP",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "Map<Any,Any>"
        }
      ]
    },
    {
      "function": "unPack",
      "warpScriptName": "UNPACK",
      "attributes": [
        {
          "index": 1,
          "name": "format",
          "type": "String"
        }
      ]
    },
    {
      "function": "valueList",
      "warpScriptName": "VALUELIST",
      "attributes": [
        {
          "index": 1,
          "name": "input",
          "type": "Map<Any,Any>"
        }
      ]
    },
    {
      "function": "vTo",
      "warpScriptName": "V->"
    },
    {
      "function": "vTo",
      "warpScriptName": "V->"
    },
    {
      "function": "vectorTo",
      "warpScriptName": "VEC->"
    },
    {
      "function": "zip",
      "warpScriptName": "ZIP",
      "attributes": [
        {
          "index": 1,
          "name": "value",
          "type": "List<List<Any>>"
        }
      ]
    },
    {
      "function": "",
      "warpScriptName": ""
    },
    {
      "function": "",
      "warpScriptName": ""
    },
    {
      "function": "",
      "warpScriptName": ""
    },
    {
      "function": "",
      "warpScriptName": ""
    },
    {
      "function": "",
      "warpScriptName": ""
    },
    {
      "function": "drop",
      "warpScriptName": "DROP"
    },
    {
      "function": "swap",
      "warpScriptName": "SWAP"
    }
  ]

}
